"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./src/views/SolanaSwapView/index.tsx":
/*!********************************************!*\
  !*** ./src/views/SolanaSwapView/index.tsx ***!
  \********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"SolanaSwapView\": function() { return /* binding */ SolanaSwapView; }\n/* harmony export */ });\n/* harmony import */ var _Users_minh_Downloads_solana_swap_dapp_main_app_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/next/dist/compiled/regenerator-runtime/runtime.js */ \"./node_modules/next/dist/compiled/regenerator-runtime/runtime.js\");\n/* harmony import */ var _Users_minh_Downloads_solana_swap_dapp_main_app_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_Users_minh_Downloads_solana_swap_dapp_main_app_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _solana_wallet_adapter_react_ui__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @solana/wallet-adapter-react-ui */ \"./node_modules/@solana/wallet-adapter-react-ui/lib/index.js\");\n/* harmony import */ var _solana_wallet_adapter_react__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @solana/wallet-adapter-react */ \"./node_modules/@solana/wallet-adapter-react/lib/index.js\");\n/* harmony import */ var components__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! components */ \"./src/components/index.tsx\");\n/* harmony import */ var _project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @project-serum/anchor */ \"./node_modules/@project-serum/anchor/dist/browser/index.js\");\n/* harmony import */ var _index_module_css__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./index.module.css */ \"./src/views/SolanaSwapView/index.module.css\");\n/* harmony import */ var _index_module_css__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(_index_module_css__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var _swap__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./swap */ \"./src/views/SolanaSwapView/swap.ts\");\n/* harmony import */ var _useProgram__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./useProgram */ \"./src/views/SolanaSwapView/useProgram.ts\");\n/* harmony import */ var _solana_spl_token__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @solana/spl-token */ \"./node_modules/@solana/spl-token/lib/esm/index.js\");\n/* harmony import */ var _coral_xyz_spl_token__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @coral-xyz/spl-token */ \"./node_modules/@coral-xyz/spl-token/dist/browser/index.js\");\n/* harmony import */ var _mithraic_labs_token_staking__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @mithraic-labs/token-staking */ \"./packages/token-staking/src/index.ts\");\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n    try {\n        var info = gen[key](arg);\n        var value = info.value;\n    } catch (error) {\n        reject(error);\n        return;\n    }\n    if (info.done) {\n        resolve(value);\n    } else {\n        Promise.resolve(value).then(_next, _throw);\n    }\n}\nfunction _asyncToGenerator(fn) {\n    return function() {\n        var self = this, args = arguments;\n        return new Promise(function(resolve, reject) {\n            var gen = fn.apply(self, args);\n            function _next(value) {\n                asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n            }\n            function _throw(err) {\n                asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n            }\n            _next(undefined);\n        });\n    };\n}\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction _iterableToArrayLimit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s3, _e;\n    try {\n        for(_i = _i.call(arr); !(_n = (_s3 = _i.next()).done); _n = true){\n            _arr.push(_s3.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\nfunction _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _objectSpread(target) {\n    for(var i = 1; i < arguments.length; i++){\n        var source = arguments[i] != null ? arguments[i] : {};\n        var ownKeys = Object.keys(source);\n        if (typeof Object.getOwnPropertySymbols === \"function\") {\n            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {\n                return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n            }));\n        }\n        ownKeys.forEach(function(key) {\n            _defineProperty(target, key, source[key]);\n        });\n    }\n    return target;\n}\nfunction _slicedToArray(arr, i) {\n    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _throw(e) {\n    throw e;\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nvar _this = undefined;\nvar _s = $RefreshSig$(), _s1 = $RefreshSig$(), _s2 = $RefreshSig$();\nvar endpoint = \"https://explorer-api.devnet.solana.com\";\nvar connection = new _project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.web3.Connection(endpoint);\nvar SolanaSwapView = function(param) {\n    var param = param !== null ? param : _throw(new TypeError(\"Cannot destructure undefined\"));\n    _s();\n    var ref = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false), isAirDropped = ref[0], setIsAirDropped = ref[1];\n    var wallet = (0,_solana_wallet_adapter_react__WEBPACK_IMPORTED_MODULE_10__.useAnchorWallet)();\n    return(/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"div\", {\n        className: \"container mx-auto max-w-6xl p-8 2xl:px-0\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"div\", {\n            className: (_index_module_css__WEBPACK_IMPORTED_MODULE_11___default().container),\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"div\", {\n                    className: \"navbar mb-2 shadow-lg bg-neutral text-neutral-content rounded-box\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"div\", {\n                            className: \"flex-none\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"button\", {\n                                className: \"btn btn-square btn-ghost\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"span\", {\n                                    className: \"text-4xl\",\n                                    children: \"🌔\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/minh/Downloads/solana-swap-dapp-main/app/src/views/SolanaSwapView/index.tsx\",\n                                    lineNumber: 35,\n                                    columnNumber: 15\n                                }, _this)\n                            }, void 0, false, {\n                                fileName: \"/Users/minh/Downloads/solana-swap-dapp-main/app/src/views/SolanaSwapView/index.tsx\",\n                                lineNumber: 34,\n                                columnNumber: 13\n                            }, _this)\n                        }, void 0, false, {\n                            fileName: \"/Users/minh/Downloads/solana-swap-dapp-main/app/src/views/SolanaSwapView/index.tsx\",\n                            lineNumber: 33,\n                            columnNumber: 11\n                        }, _this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"div\", {\n                            className: \"flex-1 px-2 mx-2\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"div\", {\n                                className: \"text-sm breadcrumbs\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"ul\", {\n                                    className: \"text-xl\",\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"li\", {\n                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"span\", {\n                                            className: \"opacity-40\",\n                                            children: \"kien6034\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/minh/Downloads/solana-swap-dapp-main/app/src/views/SolanaSwapView/index.tsx\",\n                                            lineNumber: 43,\n                                            columnNumber: 19\n                                        }, _this)\n                                    }, void 0, false, {\n                                        fileName: \"/Users/minh/Downloads/solana-swap-dapp-main/app/src/views/SolanaSwapView/index.tsx\",\n                                        lineNumber: 42,\n                                        columnNumber: 17\n                                    }, _this)\n                                }, void 0, false, {\n                                    fileName: \"/Users/minh/Downloads/solana-swap-dapp-main/app/src/views/SolanaSwapView/index.tsx\",\n                                    lineNumber: 40,\n                                    columnNumber: 15\n                                }, _this)\n                            }, void 0, false, {\n                                fileName: \"/Users/minh/Downloads/solana-swap-dapp-main/app/src/views/SolanaSwapView/index.tsx\",\n                                lineNumber: 39,\n                                columnNumber: 13\n                            }, _this)\n                        }, void 0, false, {\n                            fileName: \"/Users/minh/Downloads/solana-swap-dapp-main/app/src/views/SolanaSwapView/index.tsx\",\n                            lineNumber: 38,\n                            columnNumber: 11\n                        }, _this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"div\", {\n                            className: \"flex-none\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(_solana_wallet_adapter_react_ui__WEBPACK_IMPORTED_MODULE_3__.WalletMultiButton, {\n                                className: \"btn btn-ghost\"\n                            }, void 0, false, {\n                                fileName: \"/Users/minh/Downloads/solana-swap-dapp-main/app/src/views/SolanaSwapView/index.tsx\",\n                                lineNumber: 50,\n                                columnNumber: 13\n                            }, _this)\n                        }, void 0, false, {\n                            fileName: \"/Users/minh/Downloads/solana-swap-dapp-main/app/src/views/SolanaSwapView/index.tsx\",\n                            lineNumber: 49,\n                            columnNumber: 11\n                        }, _this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/minh/Downloads/solana-swap-dapp-main/app/src/views/SolanaSwapView/index.tsx\",\n                    lineNumber: 32,\n                    columnNumber: 9\n                }, _this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"div\", {\n                    className: \"text-center pt-2\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"div\", {\n                        className: \"hero min-h-16 pt-4\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"div\", {\n                            className: \"text-center hero-content\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"div\", {\n                                className: \"max-w-lg\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"h1\", {\n                                        className: \"mb-5 text-5xl\",\n                                        children: [\n                                            \"Swap SOL for MOVE \",\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(components__WEBPACK_IMPORTED_MODULE_4__.SolanaLogo, {}, void 0, false, {\n                                                fileName: \"/Users/minh/Downloads/solana-swap-dapp-main/app/src/views/SolanaSwapView/index.tsx\",\n                                                lineNumber: 59,\n                                                columnNumber: 37\n                                            }, _this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/Users/minh/Downloads/solana-swap-dapp-main/app/src/views/SolanaSwapView/index.tsx\",\n                                        lineNumber: 58,\n                                        columnNumber: 17\n                                    }, _this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"p\", {\n                                        children: \"1 SOL = 10 MOVE\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/minh/Downloads/solana-swap-dapp-main/app/src/views/SolanaSwapView/index.tsx\",\n                                        lineNumber: 62,\n                                        columnNumber: 17\n                                    }, _this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/minh/Downloads/solana-swap-dapp-main/app/src/views/SolanaSwapView/index.tsx\",\n                                lineNumber: 57,\n                                columnNumber: 15\n                            }, _this)\n                        }, void 0, false, {\n                            fileName: \"/Users/minh/Downloads/solana-swap-dapp-main/app/src/views/SolanaSwapView/index.tsx\",\n                            lineNumber: 56,\n                            columnNumber: 13\n                        }, _this)\n                    }, void 0, false, {\n                        fileName: \"/Users/minh/Downloads/solana-swap-dapp-main/app/src/views/SolanaSwapView/index.tsx\",\n                        lineNumber: 55,\n                        columnNumber: 11\n                    }, _this)\n                }, void 0, false, {\n                    fileName: \"/Users/minh/Downloads/solana-swap-dapp-main/app/src/views/SolanaSwapView/index.tsx\",\n                    lineNumber: 54,\n                    columnNumber: 9\n                }, _this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"div\", {\n                    className: \"flex justify-center\",\n                    children: !wallet ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(components__WEBPACK_IMPORTED_MODULE_4__.SelectAndConnectWalletButton, {\n                        onUseWalletClick: function() {}\n                    }, void 0, false, {\n                        fileName: \"/Users/minh/Downloads/solana-swap-dapp-main/app/src/views/SolanaSwapView/index.tsx\",\n                        lineNumber: 72,\n                        columnNumber: 13\n                    }, _this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(SwapScreen, {}, void 0, false, {\n                        fileName: \"/Users/minh/Downloads/solana-swap-dapp-main/app/src/views/SolanaSwapView/index.tsx\",\n                        lineNumber: 74,\n                        columnNumber: 13\n                    }, _this)\n                }, void 0, false, {\n                    fileName: \"/Users/minh/Downloads/solana-swap-dapp-main/app/src/views/SolanaSwapView/index.tsx\",\n                    lineNumber: 70,\n                    columnNumber: 9\n                }, _this)\n            ]\n        }, void 0, true, {\n            fileName: \"/Users/minh/Downloads/solana-swap-dapp-main/app/src/views/SolanaSwapView/index.tsx\",\n            lineNumber: 31,\n            columnNumber: 7\n        }, _this)\n    }, void 0, false, {\n        fileName: \"/Users/minh/Downloads/solana-swap-dapp-main/app/src/views/SolanaSwapView/index.tsx\",\n        lineNumber: 30,\n        columnNumber: 5\n    }, _this));\n};\n_s(SolanaSwapView, \"KV8Tc/e2xBOp/l15zoenZshnyXs=\", false, function() {\n    return [\n        _solana_wallet_adapter_react__WEBPACK_IMPORTED_MODULE_10__.useAnchorWallet\n    ];\n});\n_c = SolanaSwapView;\nvar SwapScreen = function() {\n    _s1();\n    var wallet = (0,_solana_wallet_adapter_react__WEBPACK_IMPORTED_MODULE_10__.useAnchorWallet)();\n    var ref = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)([]), swaps = ref[0], setSwaps = ref[1];\n    var program = (0,_useProgram__WEBPACK_IMPORTED_MODULE_7__.useProgram)({\n        connection: connection,\n        wallet: wallet\n    }).program;\n    var ref1 = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(), lastUpdatedTime = ref1[0], setLastUpdatedTime = ref1[1];\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(function() {}, [\n        wallet,\n        lastUpdatedTime\n    ]);\n    var onSwapSent = function(swapEvent) {\n        setSwaps(function(prevState) {\n            return _objectSpread({}, prevState, {\n                swapEvent: swapEvent\n            });\n        });\n    };\n    return(/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"div\", {\n        className: \"rounded-lg flex justify-center\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"div\", {\n            className: \"flex flex-col items-center justify-center\",\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"div\", {\n                className: \"text-xs\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(NetSwap, {\n                    onSwapSent: onSwapSent\n                }, void 0, false, {\n                    fileName: \"/Users/minh/Downloads/solana-swap-dapp-main/app/src/views/SolanaSwapView/index.tsx\",\n                    lineNumber: 106,\n                    columnNumber: 11\n                }, _this)\n            }, void 0, false, {\n                fileName: \"/Users/minh/Downloads/solana-swap-dapp-main/app/src/views/SolanaSwapView/index.tsx\",\n                lineNumber: 105,\n                columnNumber: 9\n            }, _this)\n        }, void 0, false, {\n            fileName: \"/Users/minh/Downloads/solana-swap-dapp-main/app/src/views/SolanaSwapView/index.tsx\",\n            lineNumber: 104,\n            columnNumber: 7\n        }, _this)\n    }, void 0, false, {\n        fileName: \"/Users/minh/Downloads/solana-swap-dapp-main/app/src/views/SolanaSwapView/index.tsx\",\n        lineNumber: 102,\n        columnNumber: 5\n    }, _this));\n};\n_s1(SwapScreen, \"DQcMhM2qko8TH6vWRCQeTbb8RxQ=\", false, function() {\n    return [\n        _solana_wallet_adapter_react__WEBPACK_IMPORTED_MODULE_10__.useAnchorWallet,\n        _useProgram__WEBPACK_IMPORTED_MODULE_7__.useProgram\n    ];\n});\n_c1 = SwapScreen;\nvar NetSwap = function(param) {\n    var onSwapSent = param.onSwapSent;\n    var isNumeric = function isNumeric(value) {\n        return /^[0-9]{0,9}(\\.[0-9]{1,2})?$/.test(value);\n    };\n    _s2();\n    var wallet = (0,_solana_wallet_adapter_react__WEBPACK_IMPORTED_MODULE_10__.useAnchorWallet)();\n    var wallet2 = (0,_solana_wallet_adapter_react__WEBPACK_IMPORTED_MODULE_10__.useWallet)();\n    var program = (0,_useProgram__WEBPACK_IMPORTED_MODULE_7__.useProgram)({\n        connection: connection,\n        wallet: wallet\n    }).program;\n    var ref6 = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(\"\"), content = ref6[0], setContent = ref6[1];\n    var ref2 = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(0), value1 = ref2[0], setValue = ref2[1];\n    var onContentChange = function(e) {\n        var value = e.target.value;\n        if (value) {\n            setContent(value);\n        }\n    };\n    var onSwapClick = function() {\n        var _ref = _asyncToGenerator(_Users_minh_Downloads_solana_swap_dapp_main_app_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee() {\n            var amount, swap_result;\n            return _Users_minh_Downloads_solana_swap_dapp_main_app_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_ctx) {\n                while(1)switch(_ctx.prev = _ctx.next){\n                    case 0:\n                        if (program) {\n                            _ctx.next = 2;\n                            break;\n                        }\n                        return _ctx.abrupt(\"return\");\n                    case 2:\n                        amount = new _project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.BN(Number(value1) * Math.pow(10, 9));\n                        _ctx.next = 5;\n                        return (0,_swap__WEBPACK_IMPORTED_MODULE_6__.swap)({\n                            program: program,\n                            wallet: wallet,\n                            amount: amount\n                        });\n                    case 5:\n                        swap_result = _ctx.sent;\n                        console.log(\"New swap transaction succeeded: \", swap_result);\n                        setContent(\"\");\n                        onSwapSent(swap_result);\n                    case 9:\n                    case \"end\":\n                        return _ctx.stop();\n                }\n            }, _callee);\n        }));\n        return function onSwapClick() {\n            return _ref.apply(this, arguments);\n        };\n    }();\n    var depositStakingSplToken = function() {\n        var _ref = _asyncToGenerator(_Users_minh_Downloads_solana_swap_dapp_main_app_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee() {\n            var stakePoolNonce, mintToBeStaked, TEST_MINT_DECIMALS, rewardMint1, stakePoolKey, ref, vaultKey, ref3, stakeMint, stakeMintAccountKey, mintToBeStakedAccount, deposit1Amount, minDuration, nextNonce, ref4, stakeReceiptKey, ref5, rewardVaultKey, rewardsTransferAmount, rewardsPerEffectiveStake, transferIx;\n            return _Users_minh_Downloads_solana_swap_dapp_main_app_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_ctx) {\n                while(1)switch(_ctx.prev = _ctx.next){\n                    case 0:\n                        _ctx.prev = 0;\n                        if (program) {\n                            _ctx.next = 3;\n                            break;\n                        }\n                        return _ctx.abrupt(\"return\");\n                    case 3:\n                        stakePoolNonce = 77; // TODO unique global nonce generation?\n                        mintToBeStaked = new _project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.web3.PublicKey(\"4RbTu1sNQ8tHcc69NxTj75FsAx64uVpaDnupjmMC2hZu\");\n                        TEST_MINT_DECIMALS = 9;\n                        rewardMint1 = new _project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.web3.PublicKey(\"J6boRtivt7qxWpMQHECpbzsZ6sUPLUDEMek8EeGLuCpY\");\n                        stakePoolKey = new _project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.web3.PublicKey(\"GtEzn2dvh2JKk6f92nStA5xa1fQKEnhBo66gPFiPcLdG\");\n                        ref = _slicedToArray(_project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.web3.PublicKey.findProgramAddressSync([\n                            stakePoolKey.toBuffer(),\n                            Buffer.from(\"vault\", \"utf-8\")\n                        ], program.programId), 1), vaultKey = ref[0];\n                        console.log(\"🚀 ~ depositStakingSplToken ~ vaultKey:\", vaultKey.toString());\n                        ref3 = _slicedToArray(_project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.web3.PublicKey.findProgramAddressSync([\n                            stakePoolKey.toBuffer(),\n                            Buffer.from(\"stakeMint\", \"utf-8\")\n                        ], program.programId), 1), stakeMint = ref3[0];\n                        console.log(\"🚀 ~ depositStakingSplToken ~ stakeMint:\", stakeMint.toString());\n                        _ctx.next = 14;\n                        return (0,_solana_spl_token__WEBPACK_IMPORTED_MODULE_12__.getOrCreateAssociatedTokenAccount)(connection, wallet, stakeMint, wallet.publicKey, false);\n                    case 14:\n                        stakeMintAccountKey = _ctx.sent;\n                        console.log(\"🚀 ~ depositStakingSplToken ~ stakeMintAccountKey:\", stakeMintAccountKey.toString());\n                        mintToBeStakedAccount = (0,_solana_spl_token__WEBPACK_IMPORTED_MODULE_12__.getAssociatedTokenAddressSync)(mintToBeStaked, wallet.publicKey, false, _solana_spl_token__WEBPACK_IMPORTED_MODULE_12__.TOKEN_PROGRAM_ID);\n                        console.log(\"🚀 ~ depositStakingSplToken ~ mintToBeStakedAccount:\", mintToBeStakedAccount.toString());\n                        deposit1Amount = new _project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.BN(2000000000);\n                        minDuration = new _project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.BN(1000);\n                        _ctx.next = 22;\n                        return (0,_mithraic_labs_token_staking__WEBPACK_IMPORTED_MODULE_9__.getNextUnusedStakeReceiptNonce)(program.provider.connection, program.programId, wallet.publicKey, stakePoolKey);\n                    case 22:\n                        nextNonce = _ctx.sent;\n                        // const nextNonce = 0;\n                        console.log(\"🚀 ~ depositStakingSplToken ~ nextNonce:\", nextNonce);\n                        ref4 = _slicedToArray(_project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.web3.PublicKey.findProgramAddressSync([\n                            wallet.publicKey.toBuffer(),\n                            stakePoolKey.toBuffer(),\n                            new _project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.BN(nextNonce).toArrayLike(Buffer, \"le\", 4),\n                            Buffer.from(\"stakeDepositReceipt\", \"utf-8\"), \n                        ], program.programId), 1), stakeReceiptKey = ref4[0];\n                        console.log(\"🚀 ~ depositStakingSplToken ~ stakeReceiptKey:\", stakeReceiptKey.toString());\n                        ref5 = _slicedToArray(_project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.web3.PublicKey.findProgramAddressSync([\n                            stakePoolKey.toBuffer(),\n                            rewardMint1.toBuffer(),\n                            Buffer.from(\"rewardVault\", \"utf-8\"), \n                        ], program.programId), 1), rewardVaultKey = ref5[0];\n                        console.log(\"🚀 ~ depositStakingSplToken ~ rewardVaultKey:\", rewardVaultKey.toString());\n                        rewardsTransferAmount = new _project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.BN(1000000000);\n                        rewardsPerEffectiveStake = rewardsTransferAmount.div(deposit1Amount);\n                        console.log(\"🚀 ~ depositStakingSplToken ~ rewardsPerEffectiveStake:\", Number(rewardsPerEffectiveStake));\n                        transferIx = (0,_solana_spl_token__WEBPACK_IMPORTED_MODULE_12__.createTransferInstruction)((0,_solana_spl_token__WEBPACK_IMPORTED_MODULE_12__.getAssociatedTokenAddressSync)(rewardMint1, new _project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.web3.PublicKey(\"3s44iXti5YBBxA5kP8h7L8LCEeVTh3Wd6LAF9r3Vv8tT\")), rewardVaultKey, new _project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.web3.PublicKey(\"3s44iXti5YBBxA5kP8h7L8LCEeVTh3Wd6LAF9r3Vv8tT\"), rewardsTransferAmount.toNumber());\n                        _ctx.next = 34;\n                        return program.methods.deposit(nextNonce, deposit1Amount, minDuration).accounts({\n                            payer: wallet.publicKey,\n                            owner: wallet.publicKey,\n                            from: mintToBeStakedAccount,\n                            stakeMint: stakeMint,\n                            stakePool: stakePoolKey,\n                            vault: vaultKey,\n                            destination: stakeMintAccountKey.address,\n                            stakeDepositReceipt: stakeReceiptKey,\n                            tokenProgram: _solana_spl_token__WEBPACK_IMPORTED_MODULE_12__.TOKEN_PROGRAM_ID,\n                            rent: _project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.web3.SYSVAR_RENT_PUBKEY,\n                            systemProgram: _project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.web3.SystemProgram.programId\n                        }).remainingAccounts([\n                            {\n                                pubkey: rewardVaultKey,\n                                isWritable: false,\n                                isSigner: false\n                            }, \n                        ])// .preInstructions([transferIx])\n                        // .signers([keypair])\n                        .rpc({\n                            skipPreflight: true\n                        });\n                    case 34:\n                        _ctx.next = 39;\n                        break;\n                    case 36:\n                        _ctx.prev = 36;\n                        _ctx.t0 = _ctx[\"catch\"](0);\n                        console.log(\"🚀 ~ depositStakingSplToken ~ e:\", _ctx.t0);\n                    case 39:\n                    case \"end\":\n                        return _ctx.stop();\n                }\n            }, _callee, null, [\n                [\n                    0,\n                    36\n                ]\n            ]);\n        }));\n        return function depositStakingSplToken() {\n            return _ref.apply(this, arguments);\n        };\n    }();\n    console.log(value1);\n    var importToken = function() {\n        var _ref = _asyncToGenerator(_Users_minh_Downloads_solana_swap_dapp_main_app_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee(contractAddress, onDone) {\n            var tokenMintAddress, associatedToken, transaction, tx;\n            return _Users_minh_Downloads_solana_swap_dapp_main_app_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_ctx) {\n                while(1)switch(_ctx.prev = _ctx.next){\n                    case 0:\n                        _ctx.prev = 0;\n                        console.log(\"importToken contractAddress\", contractAddress);\n                        tokenMintAddress = new _project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.web3.PublicKey(contractAddress);\n                        console.log(\"importToken tokenMintAddress\", tokenMintAddress);\n                        associatedToken = (0,_solana_spl_token__WEBPACK_IMPORTED_MODULE_12__.getAssociatedTokenAddressSync)(tokenMintAddress, wallet.publicKey, false);\n                        transaction = new _project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.web3.Transaction().add((0,_solana_spl_token__WEBPACK_IMPORTED_MODULE_12__.createAssociatedTokenAccountInstruction)(wallet.publicKey, associatedToken, wallet.publicKey, tokenMintAddress));\n                        _ctx.next = 8;\n                        return wallet2.sendTransaction(transaction, connection);\n                    case 8:\n                        tx = _ctx.sent;\n                        if (tx) {\n                            onDone && onDone(tx);\n                        }\n                        console.log(\"importToken\", tx);\n                        return _ctx.abrupt(\"return\", tx);\n                    case 14:\n                        _ctx.prev = 14;\n                        _ctx.t0 = _ctx[\"catch\"](0);\n                        console.log(\"importToken\", _ctx.t0);\n                    case 17:\n                    case \"end\":\n                        return _ctx.stop();\n                }\n            }, _callee, null, [\n                [\n                    0,\n                    14\n                ]\n            ]);\n        }));\n        return function importToken(contractAddress, onDone) {\n            return _ref.apply(this, arguments);\n        };\n    }();\n    var withfraw = function() {\n        var _ref = _asyncToGenerator(_Users_minh_Downloads_solana_swap_dapp_main_app_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee(receiptNonceNumber) {\n            var mintToBeStaked, TEST_MINT_DECIMALS, rewardMint1, stakePoolKey, ref, vaultKey, ref7, stakeMint, stakeMintAccountKey, receiptNonce, mintToBeStakedAccount, ref8, stakeReceiptKey, ref9, rewardVaultKey, depositorReward1AccountKey;\n            return _Users_minh_Downloads_solana_swap_dapp_main_app_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_ctx) {\n                while(1)switch(_ctx.prev = _ctx.next){\n                    case 0:\n                        _ctx.prev = 0;\n                        if (program) {\n                            _ctx.next = 3;\n                            break;\n                        }\n                        return _ctx.abrupt(\"return\");\n                    case 3:\n                        mintToBeStaked = new _project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.web3.PublicKey(\"4RbTu1sNQ8tHcc69NxTj75FsAx64uVpaDnupjmMC2hZu\");\n                        TEST_MINT_DECIMALS = 9;\n                        rewardMint1 = new _project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.web3.PublicKey(\"J6boRtivt7qxWpMQHECpbzsZ6sUPLUDEMek8EeGLuCpY\");\n                        stakePoolKey = new _project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.web3.PublicKey(\"GtEzn2dvh2JKk6f92nStA5xa1fQKEnhBo66gPFiPcLdG\");\n                        ref = _slicedToArray(_project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.web3.PublicKey.findProgramAddressSync([\n                            stakePoolKey.toBuffer(),\n                            Buffer.from(\"vault\", \"utf-8\")\n                        ], program.programId), 1), vaultKey = ref[0];\n                        console.log(\"🚀 ~ depositStakingSplToken ~ vaultKey:\", vaultKey.toString());\n                        ref7 = _slicedToArray(_project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.web3.PublicKey.findProgramAddressSync([\n                            stakePoolKey.toBuffer(),\n                            Buffer.from(\"stakeMint\", \"utf-8\")\n                        ], program.programId), 1), stakeMint = ref7[0];\n                        _ctx.next = 12;\n                        return (0,_solana_spl_token__WEBPACK_IMPORTED_MODULE_12__.getOrCreateAssociatedTokenAccount)(connection, wallet, stakeMint, wallet.publicKey, false);\n                    case 12:\n                        stakeMintAccountKey = _ctx.sent;\n                        receiptNonce = receiptNonceNumber;\n                        console.log(\"🚀 ~ withfraw ~ receiptNonce:\", receiptNonce);\n                        mintToBeStakedAccount = (0,_solana_spl_token__WEBPACK_IMPORTED_MODULE_12__.getAssociatedTokenAddressSync)(mintToBeStaked, wallet.publicKey, false, _solana_spl_token__WEBPACK_IMPORTED_MODULE_12__.TOKEN_PROGRAM_ID);\n                        ref8 = _slicedToArray(_project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.web3.PublicKey.findProgramAddressSync([\n                            wallet.publicKey.toBuffer(),\n                            stakePoolKey.toBuffer(),\n                            new _project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.BN(receiptNonce).toArrayLike(Buffer, \"le\", 4),\n                            Buffer.from(\"stakeDepositReceipt\", \"utf-8\"), \n                        ], program.programId), 1), stakeReceiptKey = ref8[0];\n                        ref9 = _slicedToArray(_project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.web3.PublicKey.findProgramAddressSync([\n                            stakePoolKey.toBuffer(),\n                            rewardMint1.toBuffer(),\n                            Buffer.from(\"rewardVault\", \"utf-8\"), \n                        ], program.programId), 1), rewardVaultKey = ref9[0];\n                        depositorReward1AccountKey = (0,_solana_spl_token__WEBPACK_IMPORTED_MODULE_12__.getAssociatedTokenAddressSync)(rewardMint1, wallet.publicKey);\n                        _ctx.next = 21;\n                        return program.methods.withdraw().accounts({\n                            claimBase: {\n                                owner: wallet.publicKey,\n                                stakePool: stakePoolKey,\n                                stakeDepositReceipt: stakeReceiptKey,\n                                tokenProgram: _solana_spl_token__WEBPACK_IMPORTED_MODULE_12__.TOKEN_PROGRAM_ID\n                            },\n                            vault: vaultKey,\n                            stakeMint: stakeMint,\n                            from: stakeMintAccountKey.address,\n                            destination: mintToBeStakedAccount\n                        }).remainingAccounts([\n                            {\n                                pubkey: rewardVaultKey,\n                                isWritable: true,\n                                isSigner: false\n                            },\n                            {\n                                pubkey: depositorReward1AccountKey,\n                                isWritable: true,\n                                isSigner: false\n                            }, \n                        ]).rpc({\n                            skipPreflight: true\n                        });\n                    case 21:\n                        _ctx.next = 26;\n                        break;\n                    case 23:\n                        _ctx.prev = 23;\n                        _ctx.t0 = _ctx[\"catch\"](0);\n                        console.log(\"🚀 ~ withfraw ~ err:\", _ctx.t0);\n                    case 26:\n                    case \"end\":\n                        return _ctx.stop();\n                }\n            }, _callee, null, [\n                [\n                    0,\n                    23\n                ]\n            ]);\n        }));\n        return function withfraw(receiptNonceNumber) {\n            return _ref.apply(this, arguments);\n        };\n    }();\n    var claimReward = function() {\n        var _ref = _asyncToGenerator(_Users_minh_Downloads_solana_swap_dapp_main_app_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee(receiptNonceNumber) {\n            var mintToBeStaked, TEST_MINT_DECIMALS, rewardMint1, stakePoolKey, ref, vaultKey, receiptNonce, ref10, stakeReceiptKey, ref11, rewardVaultKey, depositorReward1AccountKey;\n            return _Users_minh_Downloads_solana_swap_dapp_main_app_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_ctx) {\n                while(1)switch(_ctx.prev = _ctx.next){\n                    case 0:\n                        _ctx.prev = 0;\n                        if (program) {\n                            _ctx.next = 3;\n                            break;\n                        }\n                        return _ctx.abrupt(\"return\");\n                    case 3:\n                        mintToBeStaked = new _project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.web3.PublicKey(\"4RbTu1sNQ8tHcc69NxTj75FsAx64uVpaDnupjmMC2hZu\");\n                        TEST_MINT_DECIMALS = 9;\n                        rewardMint1 = new _project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.web3.PublicKey(\"J6boRtivt7qxWpMQHECpbzsZ6sUPLUDEMek8EeGLuCpY\");\n                        stakePoolKey = new _project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.web3.PublicKey(\"GtEzn2dvh2JKk6f92nStA5xa1fQKEnhBo66gPFiPcLdG\");\n                        ref = _slicedToArray(_project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.web3.PublicKey.findProgramAddressSync([\n                            stakePoolKey.toBuffer(),\n                            Buffer.from(\"vault\", \"utf-8\")\n                        ], program.programId), 1), vaultKey = ref[0];\n                        console.log(\"🚀 ~ depositStakingSplToken ~ vaultKey:\", vaultKey.toString());\n                        receiptNonce = receiptNonceNumber;\n                        ref10 = _slicedToArray(_project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.web3.PublicKey.findProgramAddressSync([\n                            wallet.publicKey.toBuffer(),\n                            stakePoolKey.toBuffer(),\n                            new _project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.BN(receiptNonce).toArrayLike(Buffer, \"le\", 4),\n                            Buffer.from(\"stakeDepositReceipt\", \"utf-8\"), \n                        ], program.programId), 1), stakeReceiptKey = ref10[0];\n                        ref11 = _slicedToArray(_project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.web3.PublicKey.findProgramAddressSync([\n                            stakePoolKey.toBuffer(),\n                            rewardMint1.toBuffer(),\n                            Buffer.from(\"rewardVault\", \"utf-8\"), \n                        ], program.programId), 1), rewardVaultKey = ref11[0];\n                        depositorReward1AccountKey = (0,_solana_spl_token__WEBPACK_IMPORTED_MODULE_12__.getAssociatedTokenAddressSync)(rewardMint1, wallet.publicKey);\n                        console.log(\"🚀 ~ claimReward ~ depositorReward1AccountKey:\", depositorReward1AccountKey);\n                        _ctx.next = 16;\n                        return program.methods.claimAll().accounts({\n                            claimBase: {\n                                owner: wallet.publicKey,\n                                stakePool: stakePoolKey,\n                                stakeDepositReceipt: stakeReceiptKey,\n                                tokenProgram: _solana_spl_token__WEBPACK_IMPORTED_MODULE_12__.TOKEN_PROGRAM_ID\n                            }\n                        }).remainingAccounts([\n                            {\n                                pubkey: rewardVaultKey,\n                                isWritable: true,\n                                isSigner: false\n                            },\n                            {\n                                pubkey: depositorReward1AccountKey,\n                                isWritable: true,\n                                isSigner: false\n                            }, \n                        ]).rpc({\n                            skipPreflight: true\n                        });\n                    case 16:\n                        _ctx.next = 21;\n                        break;\n                    case 18:\n                        _ctx.prev = 18;\n                        _ctx.t0 = _ctx[\"catch\"](0);\n                        console.log(\"🚀 ~ claimReward ~ err:\", _ctx.t0);\n                    case 21:\n                    case \"end\":\n                        return _ctx.stop();\n                }\n            }, _callee, null, [\n                [\n                    0,\n                    18\n                ]\n            ]);\n        }));\n        return function claimReward(receiptNonceNumber) {\n            return _ref.apply(this, arguments);\n        };\n    }();\n    var infoReceipt = function() {\n        var _ref = _asyncToGenerator(_Users_minh_Downloads_solana_swap_dapp_main_app_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee(receiptNonce) {\n            var ref, provider, tokenProgram, stakePoolKey, rewardMint1, depositerReward1AccKey, ref12, stakeReceiptKey, ref13, depositerReward1Account, stakeReceipt, stakePool;\n            return _Users_minh_Downloads_solana_swap_dapp_main_app_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_ctx) {\n                while(1)switch(_ctx.prev = _ctx.next){\n                    case 0:\n                        ;\n                        if (program) {\n                            _ctx.next = 3;\n                            break;\n                        }\n                        return _ctx.abrupt(\"return\");\n                    case 3:\n                        provider = new _project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.AnchorProvider(connection, wallet, {\n                            commitment: \"confirmed\"\n                        });\n                        tokenProgram = (0,_coral_xyz_spl_token__WEBPACK_IMPORTED_MODULE_8__.splTokenProgram)({\n                            programId: _solana_spl_token__WEBPACK_IMPORTED_MODULE_12__.TOKEN_PROGRAM_ID,\n                            provider: provider\n                        });\n                        stakePoolKey = new _project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.web3.PublicKey(\"GtEzn2dvh2JKk6f92nStA5xa1fQKEnhBo66gPFiPcLdG\");\n                        rewardMint1 = new _project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.web3.PublicKey(\"J6boRtivt7qxWpMQHECpbzsZ6sUPLUDEMek8EeGLuCpY\");\n                        depositerReward1AccKey = (0,_solana_spl_token__WEBPACK_IMPORTED_MODULE_12__.getAssociatedTokenAddressSync)(rewardMint1, wallet.publicKey);\n                        ref12 = _slicedToArray(_project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.web3.PublicKey.findProgramAddressSync([\n                            wallet.publicKey.toBuffer(),\n                            stakePoolKey.toBuffer(),\n                            new _project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.BN(receiptNonce).toArrayLike(Buffer, \"le\", 4),\n                            Buffer.from(\"stakeDepositReceipt\", \"utf-8\"), \n                        ], program.programId), 1), stakeReceiptKey = ref12[0];\n                        _ctx.t0 = _slicedToArray;\n                        _ctx.next = 12;\n                        return Promise.all([\n                            tokenProgram.account.account.fetch(depositerReward1AccKey),\n                            program.account.stakeDepositReceipt.fetch(stakeReceiptKey),\n                            program.account.stakePool.fetch(stakePoolKey), \n                        ]);\n                    case 12:\n                        _ctx.t1 = _ctx.sent;\n                        ref13 = (0, _ctx.t0)(_ctx.t1, 3);\n                        depositerReward1Account = ref13[0];\n                        stakeReceipt = ref13[1];\n                        stakePool = ref13[2];\n                        console.log(\"🚀 ~ infoReceipt ~ depositerReward1Account:\", depositerReward1Account);\n                        console.log(\"🚀 ~ infoReceipt ~ stakeReceipt:\", Number(stakeReceipt.depositAmount));\n                        console.log(\"🚀 ~ infoReceipt ~ stakeReceipt:\", Number(stakeReceipt.lockupDuration));\n                        console.log(\"🚀 ~ infoReceipt ~ stakeReceipt:\", Number(stakeReceipt.depositTimestamp));\n                        console.log(\"date\", new Date((Number(stakeReceipt.lockupDuration) + Number(stakeReceipt.depositTimestamp)) * 1000));\n                        console.log(\"🚀 ~ infoReceipt ~ stakeReceipt:\", stakeReceipt);\n                        console.log(\"🚀 ~ infoReceipt ~ stakePool:\", stakePool);\n                        console.log(\"claim amount\");\n                        (ref = stakeReceipt) === null || ref === void 0 ? void 0 : ref.claimedAmounts.forEach(function(item) {\n                            console.log(Number(item));\n                        });\n                    case 26:\n                    case \"end\":\n                        return _ctx.stop();\n                }\n            }, _callee);\n        }));\n        return function infoReceipt(receiptNonce) {\n            return _ref.apply(this, arguments);\n        };\n    }();\n    var addReward = function() {\n        var _ref = _asyncToGenerator(_Users_minh_Downloads_solana_swap_dapp_main_app_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee() {\n            var provider, pr0_pub, stakePoolKey, rewardMint1, ref, rewardVaultKey, totalReward1, transferIx;\n            return _Users_minh_Downloads_solana_swap_dapp_main_app_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_ctx) {\n                while(1)switch(_ctx.prev = _ctx.next){\n                    case 0:\n                        if (program) {\n                            _ctx.next = 2;\n                            break;\n                        }\n                        return _ctx.abrupt(\"return\");\n                    case 2:\n                        provider = new _project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.AnchorProvider(connection, wallet, {\n                            commitment: \"confirmed\"\n                        });\n                        pr0_pub = new _project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.web3.PublicKey(\"3s44iXti5YBBxA5kP8h7L8LCEeVTh3Wd6LAF9r3Vv8tT\");\n                        stakePoolKey = new _project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.web3.PublicKey(\"GtEzn2dvh2JKk6f92nStA5xa1fQKEnhBo66gPFiPcLdG\");\n                        rewardMint1 = new _project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.web3.PublicKey(\"J6boRtivt7qxWpMQHECpbzsZ6sUPLUDEMek8EeGLuCpY\");\n                        ref = _slicedToArray(_project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.web3.PublicKey.findProgramAddressSync([\n                            stakePoolKey.toBuffer(),\n                            rewardMint1.toBuffer(),\n                            Buffer.from(\"rewardVault\", \"utf-8\"), \n                        ], program.programId), 1), rewardVaultKey = ref[0];\n                        totalReward1 = 10000000000;\n                        transferIx = (0,_solana_spl_token__WEBPACK_IMPORTED_MODULE_12__.createTransferInstruction)((0,_solana_spl_token__WEBPACK_IMPORTED_MODULE_12__.getAssociatedTokenAddressSync)(rewardMint1, pr0_pub), rewardVaultKey, pr0_pub, totalReward1);\n                        _ctx.next = 11;\n                        return wallet2.sendTransaction(new _project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.web3.Transaction().add(transferIx), connection);\n                    case 11:\n                    case \"end\":\n                        return _ctx.stop();\n                }\n            }, _callee);\n        }));\n        return function addReward() {\n            return _ref.apply(this, arguments);\n        };\n    }();\n    //\n    var inittialPool = function() {\n        var _ref = _asyncToGenerator(_Users_minh_Downloads_solana_swap_dapp_main_app_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee1() {\n            var SCALE_FACTOR_BASE, nonce, mintToBeStaked, authority;\n            return _Users_minh_Downloads_solana_swap_dapp_main_app_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_ctx1) {\n                while(1)switch(_ctx1.prev = _ctx1.next){\n                    case 0:\n                        _ctx1.prev = 0;\n                        if (program) {\n                            _ctx1.next = 3;\n                            break;\n                        }\n                        return _ctx1.abrupt(\"return\");\n                    case 3:\n                        SCALE_FACTOR_BASE = 1000000000;\n                        nonce = 33;\n                        mintToBeStaked = new _project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.web3.PublicKey(\"DkuNXi6GNDBLQo5piaQJZEF6dNxLahpbXRCAg3j6DLYn\");\n                        authority = wallet.publicKey;\n                        // const [stakePoolKey] = anchor.web3.PublicKey.findProgramAddressSync(\n                        //   [\n                        //     new anchor.BN(nonce).toArrayLike(Buffer, \"le\", 1),\n                        //     mintToBeStaked.toBuffer(),\n                        //     authority.toBuffer(),\n                        //     Buffer.from(\"stakePool\", \"utf-8\"),\n                        //   ],\n                        //   program.programId\n                        // );\n                        // console.log(\"🚀 ~ inittialPool ~ stakePoolKey:\", stakePoolKey.toString())\n                        // const [stakeMintKey] = anchor.web3.PublicKey.findProgramAddressSync(\n                        //   [stakePoolKey.toBuffer(), Buffer.from(\"stakeMint\", \"utf-8\")],\n                        //   program.programId\n                        // );\n                        // const [vaultKey] = anchor.web3.PublicKey.findProgramAddressSync(\n                        //   [stakePoolKey.toBuffer(), Buffer.from(\"vault\", \"utf-8\")],\n                        //   program.programId\n                        // );\n                        // const minDuration = new anchor.BN(0);\n                        // const maxDuration = new anchor.BN(31536000); // 1 year in seconds\n                        // const maxWeight = new anchor.BN(4 * parseInt(SCALE_FACTOR_BASE.toString()));\n                        // await program.methods\n                        //   .initializeStakePool(nonce, maxWeight, minDuration, maxDuration)\n                        //   .accounts({\n                        //     payer: wallet.publicKey,\n                        //     authority: authority,\n                        //     stakePool: stakePoolKey,\n                        //     stakeMint: stakeMintKey,\n                        //     mint: mintToBeStaked,\n                        //     vault: vaultKey,\n                        //     tokenProgram: SPL_TOKEN_PROGRAM_ID,\n                        //     rent: anchor.web3.SYSVAR_RENT_PUBKEY,\n                        //     systemProgram: anchor.web3.SystemProgram.programId,\n                        //   })\n                        //   .rpc();\n                        setTimeout(_asyncToGenerator(_Users_minh_Downloads_solana_swap_dapp_main_app_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee() {\n                            var stakePoolKey, ref, stakePool;\n                            return _Users_minh_Downloads_solana_swap_dapp_main_app_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_ctx) {\n                                while(1)switch(_ctx.prev = _ctx.next){\n                                    case 0:\n                                        stakePoolKey = new _project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.web3.PublicKey(\"D6n38j1Vjv5HMdkME1xHYvFMMKZFgJMjZWbMWumAUvkp\");\n                                        _ctx.t0 = _slicedToArray;\n                                        _ctx.next = 4;\n                                        return Promise.all([\n                                            program.account.stakePool.fetch(stakePoolKey), \n                                        ]);\n                                    case 4:\n                                        _ctx.t1 = _ctx.sent;\n                                        ref = (0, _ctx.t0)(_ctx.t1, 1);\n                                        stakePool = ref[0];\n                                        console.log(\"🚀 ~ it ~ stakePool:\", stakePool);\n                                        console.log({\n                                            authority: stakePool.authority.toString(),\n                                            mint: stakePool.mint.toString(),\n                                            stakeMint: stakePool.stakeMint.toString(),\n                                            vault: stakePool.vault.toString(),\n                                            creator: stakePool.creator.toString(),\n                                            totalWeightedStake: Number(stakePool.totalWeightedStake),\n                                            baseWeight: stakePool.baseWeight,\n                                            maxWeight: stakePool.maxWeight,\n                                            minDuration: stakePool.minDuration,\n                                            maxDuration: stakePool.maxDuration\n                                        });\n                                    case 9:\n                                    case \"end\":\n                                        return _ctx.stop();\n                                }\n                            }, _callee);\n                        })), 2000);\n                        _ctx1.next = 13;\n                        break;\n                    case 10:\n                        _ctx1.prev = 10;\n                        _ctx1.t0 = _ctx1[\"catch\"](0);\n                        console.log(\"🚀 ~ inittialPool ~ err:\", _ctx1.t0);\n                    case 13:\n                    case \"end\":\n                        return _ctx1.stop();\n                }\n            }, _callee1, null, [\n                [\n                    0,\n                    10\n                ]\n            ]);\n        }));\n        return function inittialPool() {\n            return _ref.apply(this, arguments);\n        };\n    }();\n    var addRewardPool = function() {\n        var _ref = _asyncToGenerator(_Users_minh_Downloads_solana_swap_dapp_main_app_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee() {\n            var rewardPoolIndex, _authority, stakePoolKey, rewardMint, ref, rewardVaultKey;\n            return _Users_minh_Downloads_solana_swap_dapp_main_app_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_ctx) {\n                while(1)switch(_ctx.prev = _ctx.next){\n                    case 0:\n                        _ctx.prev = 0;\n                        if (program) {\n                            _ctx.next = 3;\n                            break;\n                        }\n                        return _ctx.abrupt(\"return\");\n                    case 3:\n                        rewardPoolIndex = 1;\n                        _authority = wallet.publicKey;\n                        stakePoolKey = new _project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.web3.PublicKey(\"D6n38j1Vjv5HMdkME1xHYvFMMKZFgJMjZWbMWumAUvkp\");\n                        rewardMint = new _project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.web3.PublicKey(\"7znV6ugwiUDqP7jiBUk1gp3dKFTUztcKMQ5dwcLMgfwm\");\n                        ref = _slicedToArray(_project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.web3.PublicKey.findProgramAddressSync([\n                            stakePoolKey.toBuffer(),\n                            rewardMint.toBuffer(),\n                            Buffer.from(\"rewardVault\", \"utf-8\"), \n                        ], program.programId), 1), rewardVaultKey = ref[0];\n                        console.log(\"🚀 ~ addRewardPool ~ rewardVaultKey:\", rewardVaultKey.toString());\n                        return _ctx.abrupt(\"return\", program.methods.addRewardPool(rewardPoolIndex).accounts({\n                            payer: wallet.publicKey,\n                            authority: _authority,\n                            rewardMint: rewardMint,\n                            stakePool: stakePoolKey,\n                            rewardVault: rewardVaultKey,\n                            tokenProgram: _coral_xyz_spl_token__WEBPACK_IMPORTED_MODULE_8__.SPL_TOKEN_PROGRAM_ID,\n                            rent: _project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.web3.SYSVAR_RENT_PUBKEY,\n                            systemProgram: _project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.web3.SystemProgram.programId\n                        }).rpc());\n                    case 12:\n                        _ctx.prev = 12;\n                        _ctx.t0 = _ctx[\"catch\"](0);\n                        console.log(\"🚀 ~ addRewardPool ~ err:\", _ctx.t0);\n                    case 15:\n                    case \"end\":\n                        return _ctx.stop();\n                }\n            }, _callee, null, [\n                [\n                    0,\n                    12\n                ]\n            ]);\n        }));\n        return function addRewardPool() {\n            return _ref.apply(this, arguments);\n        };\n    }();\n    var depositStakingSplToken2 = function() {\n        var _ref = _asyncToGenerator(_Users_minh_Downloads_solana_swap_dapp_main_app_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee() {\n            var stakePoolNonce, mintToBeStaked, TEST_MINT_DECIMALS, rewardMint1, stakePoolKey, ref, vaultKey, ref14, stakeMint, stakeMintAccountKey, mintToBeStakedAccount, deposit1Amount, minDuration, nextNonce, ref15, stakeReceiptKey, ref16, rewardVaultKey, rewardsTransferAmount, rewardsPerEffectiveStake, transferIx;\n            return _Users_minh_Downloads_solana_swap_dapp_main_app_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_ctx) {\n                while(1)switch(_ctx.prev = _ctx.next){\n                    case 0:\n                        _ctx.prev = 0;\n                        if (program) {\n                            _ctx.next = 3;\n                            break;\n                        }\n                        return _ctx.abrupt(\"return\");\n                    case 3:\n                        stakePoolNonce = 77; // TODO unique global nonce generation?\n                        mintToBeStaked = new _project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.web3.PublicKey(\"DkuNXi6GNDBLQo5piaQJZEF6dNxLahpbXRCAg3j6DLYn\");\n                        TEST_MINT_DECIMALS = 9;\n                        rewardMint1 = new _project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.web3.PublicKey(\"7znV6ugwiUDqP7jiBUk1gp3dKFTUztcKMQ5dwcLMgfwm\");\n                        stakePoolKey = new _project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.web3.PublicKey(\"D6n38j1Vjv5HMdkME1xHYvFMMKZFgJMjZWbMWumAUvkp\");\n                        ref = _slicedToArray(_project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.web3.PublicKey.findProgramAddressSync([\n                            stakePoolKey.toBuffer(),\n                            Buffer.from(\"vault\", \"utf-8\")\n                        ], program.programId), 1), vaultKey = ref[0];\n                        console.log(\"🚀 ~ depositStakingSplToken ~ vaultKey:\", vaultKey.toString());\n                        ref14 = _slicedToArray(_project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.web3.PublicKey.findProgramAddressSync([\n                            stakePoolKey.toBuffer(),\n                            Buffer.from(\"stakeMint\", \"utf-8\")\n                        ], program.programId), 1), stakeMint = ref14[0];\n                        console.log(\"🚀 ~ depositStakingSplToken ~ stakeMint:\", stakeMint.toString());\n                        _ctx.next = 14;\n                        return (0,_solana_spl_token__WEBPACK_IMPORTED_MODULE_12__.getOrCreateAssociatedTokenAccount)(connection, wallet, stakeMint, wallet.publicKey, false);\n                    case 14:\n                        stakeMintAccountKey = _ctx.sent;\n                        console.log(\"🚀 ~ depositStakingSplToken ~ stakeMintAccountKey:\", stakeMintAccountKey.address.toString());\n                        mintToBeStakedAccount = (0,_solana_spl_token__WEBPACK_IMPORTED_MODULE_12__.getAssociatedTokenAddressSync)(mintToBeStaked, wallet.publicKey, false, _solana_spl_token__WEBPACK_IMPORTED_MODULE_12__.TOKEN_PROGRAM_ID);\n                        console.log(\"🚀 ~ depositStakingSplToken ~ mintToBeStakedAccount:\", mintToBeStakedAccount.toString());\n                        deposit1Amount = new _project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.BN(3000000000);\n                        minDuration = new _project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.BN(31536000 / 4);\n                        _ctx.next = 22;\n                        return (0,_mithraic_labs_token_staking__WEBPACK_IMPORTED_MODULE_9__.getNextUnusedStakeReceiptNonce)(program.provider.connection, program.programId, wallet.publicKey, stakePoolKey);\n                    case 22:\n                        nextNonce = _ctx.sent;\n                        // const nextNonce = 0;\n                        console.log(\"🚀 ~ depositStakingSplToken ~ nextNonce:\", nextNonce);\n                        ref15 = _slicedToArray(_project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.web3.PublicKey.findProgramAddressSync([\n                            wallet.publicKey.toBuffer(),\n                            stakePoolKey.toBuffer(),\n                            new _project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.BN(nextNonce).toArrayLike(Buffer, \"le\", 4),\n                            Buffer.from(\"stakeDepositReceipt\", \"utf-8\"), \n                        ], program.programId), 1), stakeReceiptKey = ref15[0];\n                        console.log(\"🚀 ~ depositStakingSplToken ~ stakeReceiptKey:\", stakeReceiptKey.toString());\n                        ref16 = _slicedToArray(_project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.web3.PublicKey.findProgramAddressSync([\n                            stakePoolKey.toBuffer(),\n                            rewardMint1.toBuffer(),\n                            Buffer.from(\"rewardVault\", \"utf-8\"), \n                        ], program.programId), 1), rewardVaultKey = ref16[0];\n                        console.log(\"🚀 ~ depositStakingSplToken ~ rewardVaultKey:\", rewardVaultKey.toString());\n                        rewardsTransferAmount = new _project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.BN(1000000000);\n                        rewardsPerEffectiveStake = rewardsTransferAmount.div(deposit1Amount);\n                        console.log(\"🚀 ~ depositStakingSplToken ~ rewardsPerEffectiveStake:\", Number(rewardsPerEffectiveStake));\n                        transferIx = (0,_solana_spl_token__WEBPACK_IMPORTED_MODULE_12__.createTransferInstruction)((0,_solana_spl_token__WEBPACK_IMPORTED_MODULE_12__.getAssociatedTokenAddressSync)(rewardMint1, new _project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.web3.PublicKey(\"3s44iXti5YBBxA5kP8h7L8LCEeVTh3Wd6LAF9r3Vv8tT\")), rewardVaultKey, new _project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.web3.PublicKey(\"3s44iXti5YBBxA5kP8h7L8LCEeVTh3Wd6LAF9r3Vv8tT\"), rewardsTransferAmount.toNumber());\n                        _ctx.next = 34;\n                        return program.methods.deposit(nextNonce, deposit1Amount, minDuration).accounts({\n                            payer: wallet.publicKey,\n                            owner: wallet.publicKey,\n                            from: mintToBeStakedAccount,\n                            stakeMint: stakeMint,\n                            stakePool: stakePoolKey,\n                            vault: vaultKey,\n                            destination: stakeMintAccountKey.address,\n                            stakeDepositReceipt: stakeReceiptKey,\n                            tokenProgram: _solana_spl_token__WEBPACK_IMPORTED_MODULE_12__.TOKEN_PROGRAM_ID,\n                            rent: _project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.web3.SYSVAR_RENT_PUBKEY,\n                            systemProgram: _project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.web3.SystemProgram.programId\n                        }).remainingAccounts([\n                            {\n                                pubkey: rewardVaultKey,\n                                isWritable: false,\n                                isSigner: false\n                            }, \n                        ])// .preInstructions([transferIx])\n                        // .signers([keypair])\n                        .rpc({\n                            skipPreflight: true\n                        });\n                    case 34:\n                        _ctx.next = 39;\n                        break;\n                    case 36:\n                        _ctx.prev = 36;\n                        _ctx.t0 = _ctx[\"catch\"](0);\n                        console.log(\"🚀 ~ depositStakingSplToken ~ e:\", _ctx.t0);\n                    case 39:\n                    case \"end\":\n                        return _ctx.stop();\n                }\n            }, _callee, null, [\n                [\n                    0,\n                    36\n                ]\n            ]);\n        }));\n        return function depositStakingSplToken2() {\n            return _ref.apply(this, arguments);\n        };\n    }();\n    var addReward2 = function() {\n        var _ref = _asyncToGenerator(_Users_minh_Downloads_solana_swap_dapp_main_app_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee() {\n            var provider, pr0_pub, stakePoolKey, rewardMint1, ref, rewardVaultKey, totalReward1, transferIx;\n            return _Users_minh_Downloads_solana_swap_dapp_main_app_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_ctx) {\n                while(1)switch(_ctx.prev = _ctx.next){\n                    case 0:\n                        if (program) {\n                            _ctx.next = 2;\n                            break;\n                        }\n                        return _ctx.abrupt(\"return\");\n                    case 2:\n                        provider = new _project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.AnchorProvider(connection, wallet, {\n                            commitment: \"confirmed\"\n                        });\n                        pr0_pub = wallet.publicKey;\n                        stakePoolKey = new _project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.web3.PublicKey(\"D6n38j1Vjv5HMdkME1xHYvFMMKZFgJMjZWbMWumAUvkp\");\n                        rewardMint1 = new _project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.web3.PublicKey(\"7znV6ugwiUDqP7jiBUk1gp3dKFTUztcKMQ5dwcLMgfwm\");\n                        ref = _slicedToArray(_project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.web3.PublicKey.findProgramAddressSync([\n                            stakePoolKey.toBuffer(),\n                            rewardMint1.toBuffer(),\n                            Buffer.from(\"rewardVault\", \"utf-8\"), \n                        ], program.programId), 1), rewardVaultKey = ref[0];\n                        totalReward1 = 10000000000;\n                        transferIx = (0,_solana_spl_token__WEBPACK_IMPORTED_MODULE_12__.createTransferInstruction)((0,_solana_spl_token__WEBPACK_IMPORTED_MODULE_12__.getAssociatedTokenAddressSync)(rewardMint1, pr0_pub), rewardVaultKey, pr0_pub, totalReward1);\n                        _ctx.next = 11;\n                        return wallet2.sendTransaction(new _project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.web3.Transaction().add(transferIx), connection);\n                    case 11:\n                    case \"end\":\n                        return _ctx.stop();\n                }\n            }, _callee);\n        }));\n        return function addReward2() {\n            return _ref.apply(this, arguments);\n        };\n    }();\n    var withfraw2 = function() {\n        var _ref = _asyncToGenerator(_Users_minh_Downloads_solana_swap_dapp_main_app_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee(receiptNonceNumber) {\n            var mintToBeStaked, TEST_MINT_DECIMALS, rewardMint1, stakePoolKey, ref, vaultKey, ref17, stakeMint, stakeMintAccountKey, receiptNonce, mintToBeStakedAccount, ref18, stakeReceiptKey, ref19, rewardVaultKey, depositorReward1AccountKey;\n            return _Users_minh_Downloads_solana_swap_dapp_main_app_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_ctx) {\n                while(1)switch(_ctx.prev = _ctx.next){\n                    case 0:\n                        _ctx.prev = 0;\n                        if (program) {\n                            _ctx.next = 3;\n                            break;\n                        }\n                        return _ctx.abrupt(\"return\");\n                    case 3:\n                        mintToBeStaked = new _project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.web3.PublicKey(\"DkuNXi6GNDBLQo5piaQJZEF6dNxLahpbXRCAg3j6DLYn\");\n                        TEST_MINT_DECIMALS = 9;\n                        rewardMint1 = new _project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.web3.PublicKey(\"7znV6ugwiUDqP7jiBUk1gp3dKFTUztcKMQ5dwcLMgfwm\");\n                        stakePoolKey = new _project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.web3.PublicKey(\"D6n38j1Vjv5HMdkME1xHYvFMMKZFgJMjZWbMWumAUvkp\");\n                        ref = _slicedToArray(_project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.web3.PublicKey.findProgramAddressSync([\n                            stakePoolKey.toBuffer(),\n                            Buffer.from(\"vault\", \"utf-8\")\n                        ], program.programId), 1), vaultKey = ref[0];\n                        console.log(\"🚀 ~ depositStakingSplToken ~ vaultKey:\", vaultKey.toString());\n                        ref17 = _slicedToArray(_project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.web3.PublicKey.findProgramAddressSync([\n                            stakePoolKey.toBuffer(),\n                            Buffer.from(\"stakeMint\", \"utf-8\")\n                        ], program.programId), 1), stakeMint = ref17[0];\n                        _ctx.next = 12;\n                        return (0,_solana_spl_token__WEBPACK_IMPORTED_MODULE_12__.getOrCreateAssociatedTokenAccount)(connection, wallet, stakeMint, wallet.publicKey, false);\n                    case 12:\n                        stakeMintAccountKey = _ctx.sent;\n                        receiptNonce = receiptNonceNumber;\n                        console.log(\"🚀 ~ withfraw ~ receiptNonce:\", receiptNonce);\n                        mintToBeStakedAccount = (0,_solana_spl_token__WEBPACK_IMPORTED_MODULE_12__.getAssociatedTokenAddressSync)(mintToBeStaked, wallet.publicKey, false, _solana_spl_token__WEBPACK_IMPORTED_MODULE_12__.TOKEN_PROGRAM_ID);\n                        ref18 = _slicedToArray(_project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.web3.PublicKey.findProgramAddressSync([\n                            wallet.publicKey.toBuffer(),\n                            stakePoolKey.toBuffer(),\n                            new _project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.BN(receiptNonce).toArrayLike(Buffer, \"le\", 4),\n                            Buffer.from(\"stakeDepositReceipt\", \"utf-8\"), \n                        ], program.programId), 1), stakeReceiptKey = ref18[0];\n                        ref19 = _slicedToArray(_project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.web3.PublicKey.findProgramAddressSync([\n                            stakePoolKey.toBuffer(),\n                            rewardMint1.toBuffer(),\n                            Buffer.from(\"rewardVault\", \"utf-8\"), \n                        ], program.programId), 1), rewardVaultKey = ref19[0];\n                        depositorReward1AccountKey = (0,_solana_spl_token__WEBPACK_IMPORTED_MODULE_12__.getAssociatedTokenAddressSync)(rewardMint1, wallet.publicKey);\n                        _ctx.next = 21;\n                        return program.methods.withdraw().accounts({\n                            claimBase: {\n                                owner: wallet.publicKey,\n                                stakePool: stakePoolKey,\n                                stakeDepositReceipt: stakeReceiptKey,\n                                tokenProgram: _solana_spl_token__WEBPACK_IMPORTED_MODULE_12__.TOKEN_PROGRAM_ID\n                            },\n                            vault: vaultKey,\n                            stakeMint: stakeMint,\n                            from: stakeMintAccountKey.address,\n                            destination: mintToBeStakedAccount\n                        }).remainingAccounts([\n                            {\n                                pubkey: rewardVaultKey,\n                                isWritable: true,\n                                isSigner: false\n                            },\n                            {\n                                pubkey: depositorReward1AccountKey,\n                                isWritable: true,\n                                isSigner: false\n                            }, \n                        ]).rpc({\n                            skipPreflight: true\n                        });\n                    case 21:\n                        _ctx.next = 26;\n                        break;\n                    case 23:\n                        _ctx.prev = 23;\n                        _ctx.t0 = _ctx[\"catch\"](0);\n                        console.log(\"🚀 ~ withfraw ~ err:\", _ctx.t0);\n                    case 26:\n                    case \"end\":\n                        return _ctx.stop();\n                }\n            }, _callee, null, [\n                [\n                    0,\n                    23\n                ]\n            ]);\n        }));\n        return function withfraw2(receiptNonceNumber) {\n            return _ref.apply(this, arguments);\n        };\n    }();\n    var claimReward2 = function() {\n        var _ref = _asyncToGenerator(_Users_minh_Downloads_solana_swap_dapp_main_app_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee(receiptNonceNumber) {\n            var mintToBeStaked, TEST_MINT_DECIMALS, rewardMint1, stakePoolKey, ref, vaultKey, receiptNonce, ref20, stakeReceiptKey, ref21, rewardVaultKey, depositorReward1AccountKey;\n            return _Users_minh_Downloads_solana_swap_dapp_main_app_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_ctx) {\n                while(1)switch(_ctx.prev = _ctx.next){\n                    case 0:\n                        _ctx.prev = 0;\n                        if (program) {\n                            _ctx.next = 3;\n                            break;\n                        }\n                        return _ctx.abrupt(\"return\");\n                    case 3:\n                        mintToBeStaked = new _project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.web3.PublicKey(\"DkuNXi6GNDBLQo5piaQJZEF6dNxLahpbXRCAg3j6DLYn\");\n                        TEST_MINT_DECIMALS = 9;\n                        rewardMint1 = new _project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.web3.PublicKey(\"7znV6ugwiUDqP7jiBUk1gp3dKFTUztcKMQ5dwcLMgfwm\");\n                        stakePoolKey = new _project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.web3.PublicKey(\"D6n38j1Vjv5HMdkME1xHYvFMMKZFgJMjZWbMWumAUvkp\");\n                        ref = _slicedToArray(_project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.web3.PublicKey.findProgramAddressSync([\n                            stakePoolKey.toBuffer(),\n                            Buffer.from(\"vault\", \"utf-8\")\n                        ], program.programId), 1), vaultKey = ref[0];\n                        console.log(\"🚀 ~ depositStakingSplToken ~ vaultKey:\", vaultKey.toString());\n                        receiptNonce = receiptNonceNumber;\n                        ref20 = _slicedToArray(_project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.web3.PublicKey.findProgramAddressSync([\n                            wallet.publicKey.toBuffer(),\n                            stakePoolKey.toBuffer(),\n                            new _project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.BN(receiptNonce).toArrayLike(Buffer, \"le\", 4),\n                            Buffer.from(\"stakeDepositReceipt\", \"utf-8\"), \n                        ], program.programId), 1), stakeReceiptKey = ref20[0];\n                        ref21 = _slicedToArray(_project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.web3.PublicKey.findProgramAddressSync([\n                            stakePoolKey.toBuffer(),\n                            rewardMint1.toBuffer(),\n                            Buffer.from(\"rewardVault\", \"utf-8\"), \n                        ], program.programId), 1), rewardVaultKey = ref21[0];\n                        depositorReward1AccountKey = (0,_solana_spl_token__WEBPACK_IMPORTED_MODULE_12__.getAssociatedTokenAddressSync)(rewardMint1, wallet.publicKey);\n                        console.log(\"🚀 ~ claimReward ~ depositorReward1AccountKey:\", depositorReward1AccountKey);\n                        _ctx.next = 16;\n                        return program.methods.claimAll().accounts({\n                            claimBase: {\n                                owner: wallet.publicKey,\n                                stakePool: stakePoolKey,\n                                stakeDepositReceipt: stakeReceiptKey,\n                                tokenProgram: _solana_spl_token__WEBPACK_IMPORTED_MODULE_12__.TOKEN_PROGRAM_ID\n                            }\n                        }).remainingAccounts([\n                            {\n                                pubkey: rewardVaultKey,\n                                isWritable: true,\n                                isSigner: false\n                            },\n                            {\n                                pubkey: depositorReward1AccountKey,\n                                isWritable: true,\n                                isSigner: false\n                            }, \n                        ]).rpc({\n                            skipPreflight: true\n                        });\n                    case 16:\n                        _ctx.next = 21;\n                        break;\n                    case 18:\n                        _ctx.prev = 18;\n                        _ctx.t0 = _ctx[\"catch\"](0);\n                        console.log(\"🚀 ~ claimReward ~ err:\", _ctx.t0);\n                    case 21:\n                    case \"end\":\n                        return _ctx.stop();\n                }\n            }, _callee, null, [\n                [\n                    0,\n                    18\n                ]\n            ]);\n        }));\n        return function claimReward2(receiptNonceNumber) {\n            return _ref.apply(this, arguments);\n        };\n    }();\n    var infoReceipt2 = function() {\n        var _ref = _asyncToGenerator(_Users_minh_Downloads_solana_swap_dapp_main_app_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee(receiptNonce) {\n            var ref, provider, tokenProgram, stakePoolKey, rewardMint1, depositerReward1AccKey, ref22, stakeReceiptKey, ref23, depositerReward1Account, stakeReceipt, stakePool;\n            return _Users_minh_Downloads_solana_swap_dapp_main_app_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_ctx) {\n                while(1)switch(_ctx.prev = _ctx.next){\n                    case 0:\n                        ;\n                        if (program) {\n                            _ctx.next = 3;\n                            break;\n                        }\n                        return _ctx.abrupt(\"return\");\n                    case 3:\n                        console.log(\"🚀 ~ infoReceipt2 ~ program:\", program);\n                        provider = new _project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.AnchorProvider(connection, wallet, {\n                            commitment: \"confirmed\"\n                        });\n                        tokenProgram = (0,_coral_xyz_spl_token__WEBPACK_IMPORTED_MODULE_8__.splTokenProgram)({\n                            programId: _solana_spl_token__WEBPACK_IMPORTED_MODULE_12__.TOKEN_PROGRAM_ID,\n                            provider: provider\n                        });\n                        console.log(\"🚀 ~ infoReceipt2 ~ tokenProgram:\", tokenProgram);\n                        stakePoolKey = new _project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.web3.PublicKey(\"D6n38j1Vjv5HMdkME1xHYvFMMKZFgJMjZWbMWumAUvkp\");\n                        rewardMint1 = new _project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.web3.PublicKey(\"7znV6ugwiUDqP7jiBUk1gp3dKFTUztcKMQ5dwcLMgfwm\");\n                        depositerReward1AccKey = (0,_solana_spl_token__WEBPACK_IMPORTED_MODULE_12__.getAssociatedTokenAddressSync)(rewardMint1, wallet.publicKey);\n                        ref22 = _slicedToArray(_project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.web3.PublicKey.findProgramAddressSync([\n                            wallet.publicKey.toBuffer(),\n                            stakePoolKey.toBuffer(),\n                            new _project_serum_anchor__WEBPACK_IMPORTED_MODULE_5__.BN(receiptNonce).toArrayLike(Buffer, \"le\", 4),\n                            Buffer.from(\"stakeDepositReceipt\", \"utf-8\"), \n                        ], program.programId), 1), stakeReceiptKey = ref22[0];\n                        _ctx.t0 = _slicedToArray;\n                        _ctx.next = 14;\n                        return Promise.all([\n                            tokenProgram.account.account.fetch(depositerReward1AccKey),\n                            program.account.stakeDepositReceipt.fetch(stakeReceiptKey),\n                            program.account.stakePool.fetch(stakePoolKey), \n                        ]);\n                    case 14:\n                        _ctx.t1 = _ctx.sent;\n                        ref23 = (0, _ctx.t0)(_ctx.t1, 3);\n                        depositerReward1Account = ref23[0];\n                        stakeReceipt = ref23[1];\n                        stakePool = ref23[2];\n                        console.log(\"🚀 ~ infoReceipt ~ depositerReward1Account:\", depositerReward1Account);\n                        console.log(\"🚀 ~ infoReceipt ~ stakeReceipt:\", Number(stakeReceipt.depositAmount)) // amount stake\n                        ;\n                        console.log(\"🚀 ~ infoReceipt ~ effectiveStake:\", Number(stakeReceipt.effectiveStake)) // amount after time stake\n                        ;\n                        console.log(\"🚀 ~ infoReceipt ~ stakeReceipt time lock:\", Number(stakeReceipt.lockupDuration)) //time lock\n                        ;\n                        console.log(\"🚀 ~ infoReceipt ~ stakeReceipt: time start lock\", Number(stakeReceipt.depositTimestamp)) //time start lock\n                        ;\n                        console.log(\"date Withdrawed\", new Date((Number(stakeReceipt.lockupDuration) + Number(stakeReceipt.depositTimestamp)) * 1000)); //date claimed\n                        console.log(\"🚀 ~ infoReceipt ~ stakeReceipt:\", stakeReceipt);\n                        console.log(\"🚀 ~ infoReceipt ~ stakePool:\", stakePool);\n                        console.log(\"claim amount\");\n                        console.log(Number(stakePool.rewardPools[receiptNonce].rewardsPerEffectiveStake));\n                        (ref = stakePool) === null || ref === void 0 ? void 0 : ref.rewardPools.forEach(function(item) {\n                            console.log(\"----------------\");\n                            console.log(Number(item.rewardsPerEffectiveStake));\n                        });\n                    case 30:\n                    case \"end\":\n                        return _ctx.stop();\n                }\n            }, _callee);\n        }));\n        return function infoReceipt2(receiptNonce) {\n            return _ref.apply(this, arguments);\n        };\n    }();\n    return(/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"div\", {\n        style: {\n            minWidth: 240\n        },\n        className: \"mb-8 pb-4 border-b border-gray-500 flex \",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"div\", {\n            className: \"w-full\",\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"input\", {\n                    value: value1,\n                    onChange: function(e) {\n                        var value = e.target.value;\n                        console.log(value);\n                        setValue(value);\n                    },\n                    placeholder: \"Enter the SOL amount\",\n                    className: \"mb-4\"\n                }, void 0, false, {\n                    fileName: \"/Users/minh/Downloads/solana-swap-dapp-main/app/src/views/SolanaSwapView/index.tsx\",\n                    lineNumber: 1073,\n                    columnNumber: 9\n                }, _this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"button\", {\n                    className: \"btn btn-primary rounded-full normal-case w-full\",\n                    onClick: depositStakingSplToken2,\n                    style: {\n                        minHeight: 0,\n                        height: 40\n                    },\n                    children: \"Deposit\"\n                }, void 0, false, {\n                    fileName: \"/Users/minh/Downloads/solana-swap-dapp-main/app/src/views/SolanaSwapView/index.tsx\",\n                    lineNumber: 1081,\n                    columnNumber: 9\n                }, _this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"button\", {\n                    className: \"btn btn-primary rounded-full normal-case w-full\",\n                    onClick: function() {\n                        return withfraw2(1);\n                    },\n                    style: {\n                        minHeight: 0,\n                        height: 40\n                    },\n                    children: \"Withdraw and claim reward\"\n                }, void 0, false, {\n                    fileName: \"/Users/minh/Downloads/solana-swap-dapp-main/app/src/views/SolanaSwapView/index.tsx\",\n                    lineNumber: 1088,\n                    columnNumber: 9\n                }, _this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"button\", {\n                    className: \"btn btn-primary rounded-full normal-case w-full\",\n                    onClick: function() {\n                        return claimReward2(0);\n                    },\n                    style: {\n                        minHeight: 0,\n                        height: 40\n                    },\n                    children: \"Claim Reward\"\n                }, void 0, false, {\n                    fileName: \"/Users/minh/Downloads/solana-swap-dapp-main/app/src/views/SolanaSwapView/index.tsx\",\n                    lineNumber: 1096,\n                    columnNumber: 9\n                }, _this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"button\", {\n                    className: \"btn btn-primary rounded-full normal-case w-full\",\n                    onClick: function() {\n                        return infoReceipt2(0);\n                    },\n                    style: {\n                        minHeight: 0,\n                        height: 40\n                    },\n                    children: \"Get Info Reward\"\n                }, void 0, false, {\n                    fileName: \"/Users/minh/Downloads/solana-swap-dapp-main/app/src/views/SolanaSwapView/index.tsx\",\n                    lineNumber: 1103,\n                    columnNumber: 9\n                }, _this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"button\", {\n                    className: \"btn btn-primary rounded-full normal-case w-full\",\n                    onClick: function() {\n                        return addReward2();\n                    },\n                    style: {\n                        minHeight: 0,\n                        height: 40\n                    },\n                    children: \"Add Reward\"\n                }, void 0, false, {\n                    fileName: \"/Users/minh/Downloads/solana-swap-dapp-main/app/src/views/SolanaSwapView/index.tsx\",\n                    lineNumber: 1111,\n                    columnNumber: 9\n                }, _this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"button\", {\n                    className: \"btn btn-primary rounded-full normal-case w-full\",\n                    onClick: function() {\n                        return inittialPool();\n                    },\n                    style: {\n                        minHeight: 0,\n                        height: 40\n                    },\n                    children: \"init pool stake\"\n                }, void 0, false, {\n                    fileName: \"/Users/minh/Downloads/solana-swap-dapp-main/app/src/views/SolanaSwapView/index.tsx\",\n                    lineNumber: 1120,\n                    columnNumber: 9\n                }, _this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"button\", {\n                    className: \"btn btn-primary rounded-full normal-case w-full\",\n                    onClick: function() {\n                        return addRewardPool();\n                    },\n                    style: {\n                        minHeight: 0,\n                        height: 40\n                    },\n                    children: \"add pool reward\"\n                }, void 0, false, {\n                    fileName: \"/Users/minh/Downloads/solana-swap-dapp-main/app/src/views/SolanaSwapView/index.tsx\",\n                    lineNumber: 1128,\n                    columnNumber: 9\n                }, _this)\n            ]\n        }, void 0, true, {\n            fileName: \"/Users/minh/Downloads/solana-swap-dapp-main/app/src/views/SolanaSwapView/index.tsx\",\n            lineNumber: 1072,\n            columnNumber: 7\n        }, _this)\n    }, void 0, false, {\n        fileName: \"/Users/minh/Downloads/solana-swap-dapp-main/app/src/views/SolanaSwapView/index.tsx\",\n        lineNumber: 1070,\n        columnNumber: 5\n    }, _this));\n};\n_s2(NetSwap, \"QcjkVbgCQzc2Wn0EMLi0YRKyJbo=\", false, function() {\n    return [\n        _solana_wallet_adapter_react__WEBPACK_IMPORTED_MODULE_10__.useAnchorWallet,\n        _solana_wallet_adapter_react__WEBPACK_IMPORTED_MODULE_10__.useWallet,\n        _useProgram__WEBPACK_IMPORTED_MODULE_7__.useProgram\n    ];\n});\n_c2 = NetSwap;\nvar _c, _c1, _c2;\n$RefreshReg$(_c, \"SolanaSwapView\");\n$RefreshReg$(_c1, \"SwapScreen\");\n$RefreshReg$(_c2, \"NetSwap\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/views/SolanaSwapView/index.tsx\n");

/***/ })

});